/**
 * Chat API SDK
 * The SDK allows you to receive and send messages through your WhatsApp account. [Sign up now](https://app.chat-api.com/)  The Chat API is based on the WhatsApp WEB protocol and excludes the ban both when using libraries from mgp25 and the like. Despite this, your account can be banned by anti-spam system WhatsApp after several clicking the \"block\" button.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sale@chat-api.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ChatApiSdk);
  }
}(this, function(expect, ChatApiSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ChatApiSdk.InstanceStatusStatusDataActions();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InstanceStatusStatusDataActions', function() {
    it('should create an instance of InstanceStatusStatusDataActions', function() {
      // uncomment below and update the code to test InstanceStatusStatusDataActions
      //var instane = new ChatApiSdk.InstanceStatusStatusDataActions();
      //expect(instance).to.be.a(ChatApiSdk.InstanceStatusStatusDataActions);
    });

    it('should have the property expiry (base name: "expiry")', function() {
      // uncomment below and update the code to test the property expiry
      //var instane = new ChatApiSdk.InstanceStatusStatusDataActions();
      //expect(instance).to.be();
    });

    it('should have the property retry (base name: "retry")', function() {
      // uncomment below and update the code to test the property retry
      //var instane = new ChatApiSdk.InstanceStatusStatusDataActions();
      //expect(instance).to.be();
    });

    it('should have the property logout (base name: "logout")', function() {
      // uncomment below and update the code to test the property logout
      //var instane = new ChatApiSdk.InstanceStatusStatusDataActions();
      //expect(instance).to.be();
    });

    it('should have the property takeover (base name: "takeover")', function() {
      // uncomment below and update the code to test the property takeover
      //var instane = new ChatApiSdk.InstanceStatusStatusDataActions();
      //expect(instance).to.be();
    });

    it('should have the property learnMore (base name: "learn_more")', function() {
      // uncomment below and update the code to test the property learnMore
      //var instane = new ChatApiSdk.InstanceStatusStatusDataActions();
      //expect(instance).to.be();
    });

  });

}));
