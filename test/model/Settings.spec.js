/**
 * Chat API SDK
 * The SDK allows you to receive and send messages through your WhatsApp account. [Sign up now](https://app.chat-api.com/)  The Chat API is based on the WhatsApp WEB protocol and excludes the ban both when using libraries from mgp25 and the like. Despite this, your account can be banned by anti-spam system WhatsApp after several clicking the \"block\" button.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sale@chat-api.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ChatApiSdk);
  }
}(this, function(expect, ChatApiSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ChatApiSdk.Settings();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Settings', function() {
    it('should create an instance of Settings', function() {
      // uncomment below and update the code to test Settings
      //var instane = new ChatApiSdk.Settings();
      //expect(instance).to.be.a(ChatApiSdk.Settings);
    });

    it('should have the property webhookUrl (base name: "webhookUrl")', function() {
      // uncomment below and update the code to test the property webhookUrl
      //var instane = new ChatApiSdk.Settings();
      //expect(instance).to.be();
    });

    it('should have the property ackNotificationsOn (base name: "ackNotificationsOn")', function() {
      // uncomment below and update the code to test the property ackNotificationsOn
      //var instane = new ChatApiSdk.Settings();
      //expect(instance).to.be();
    });

    it('should have the property chatUpdateOn (base name: "chatUpdateOn")', function() {
      // uncomment below and update the code to test the property chatUpdateOn
      //var instane = new ChatApiSdk.Settings();
      //expect(instance).to.be();
    });

    it('should have the property videoUploadOn (base name: "videoUploadOn")', function() {
      // uncomment below and update the code to test the property videoUploadOn
      //var instane = new ChatApiSdk.Settings();
      //expect(instance).to.be();
    });

    it('should have the property proxy (base name: "proxy")', function() {
      // uncomment below and update the code to test the property proxy
      //var instane = new ChatApiSdk.Settings();
      //expect(instance).to.be();
    });

    it('should have the property guaranteedHooks (base name: "guaranteedHooks")', function() {
      // uncomment below and update the code to test the property guaranteedHooks
      //var instane = new ChatApiSdk.Settings();
      //expect(instance).to.be();
    });

    it('should have the property ignoreOldMessages (base name: "ignoreOldMessages")', function() {
      // uncomment below and update the code to test the property ignoreOldMessages
      //var instane = new ChatApiSdk.Settings();
      //expect(instance).to.be();
    });

    it('should have the property processArchive (base name: "processArchive")', function() {
      // uncomment below and update the code to test the property processArchive
      //var instane = new ChatApiSdk.Settings();
      //expect(instance).to.be();
    });

    it('should have the property instanceStatuses (base name: "instanceStatuses")', function() {
      // uncomment below and update the code to test the property instanceStatuses
      //var instane = new ChatApiSdk.Settings();
      //expect(instance).to.be();
    });

    it('should have the property webhookStatuses (base name: "webhookStatuses")', function() {
      // uncomment below and update the code to test the property webhookStatuses
      //var instane = new ChatApiSdk.Settings();
      //expect(instance).to.be();
    });

    it('should have the property statusNotificationsOn (base name: "statusNotificationsOn")', function() {
      // uncomment below and update the code to test the property statusNotificationsOn
      //var instane = new ChatApiSdk.Settings();
      //expect(instance).to.be();
    });

  });

}));
