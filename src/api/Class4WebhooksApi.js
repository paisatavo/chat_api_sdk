/**
 * Chat API SDK
 * The SDK allows you to receive and send messages through your WhatsApp account. [Sign up now](https://app.chat-api.com/)  The Chat API is based on the WhatsApp WEB protocol and excludes the ban both when using libraries from mgp25 and the like. Despite this, your account can be banned by anti-spam system WhatsApp after several clicking the \"block\" button.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sale@chat-api.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SetWebhookStatus from '../model/SetWebhookStatus';
import WebhookUrl from '../model/WebhookUrl';

/**
* Class4Webhooks service.
* @module api/Class4WebhooksApi
* @version 1.0.0
*/
export default class Class4WebhooksApi {

    /**
    * Constructs a new Class4WebhooksApi. 
    * @alias module:api/Class4WebhooksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the setWebhook operation.
     * @callback module:api/Class4WebhooksApi~setWebhookCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SetWebhookStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sets the URL for receiving webhook
     * Sets the URL for receiving webhook notifications of new messages and message delivery events (ack).  **API responses in \"Callbacks\" tab**
     * @param {module:model/WebhookUrl} webhookUrl 
     * @param {module:api/Class4WebhooksApi~setWebhookCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SetWebhookStatus}
     */
    setWebhook(webhookUrl, callback) {
      let postBody = webhookUrl;
      // verify the required parameter 'webhookUrl' is set
      if (webhookUrl === undefined || webhookUrl === null) {
        throw new Error("Missing the required parameter 'webhookUrl' when calling setWebhook");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['instanceId', 'token'];
      let contentTypes = ['application/x-www-form-urlencoded', 'application/json'];
      let accepts = ['application/json'];
      let returnType = SetWebhookStatus;
      return this.apiClient.callApi(
        '/webhook', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
